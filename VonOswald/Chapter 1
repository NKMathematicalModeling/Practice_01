视频2.1/2.2
赋值运算、等号运算符
```
a=1;
b=2;
a==b
ans=0
```
定义空矩阵
```
m=[];
```
定义一个$m\times n$的矩阵.
工作区双击变量可以打开.
列矩阵用分号,行矩阵用逗号.
用冒号生成矩阵
```
1:0.5:10
```
初始值，步长，终止值.
矩阵的拼凑和变形
```
[m2,m3]   [m2;m3]
reshape %函数
reshape(m6,[2,5])%把m6编程2行5列的矩阵.
```

用linspace生成矩阵
```
linspace(1,10,100) %从1到10生成均匀的100个点.
```

几个特殊的矩阵
单位矩阵
```
eye(n) %n阶的单位矩阵
```
全零矩阵
```
zeros(n);
zeros(3,5); %3行5列的矩阵
zeros([3,5])
```
全一矩阵
```
ones(n) % 用法和上面类似
```

三维矩阵应用 图像，RGB图像每个通道都是一个二维矩阵.

随机矩阵
```
rand % 0-1之间的均匀分布的随机数
randi % 随机整数
randn % 正态分布的随机数
rand(n) % n阶随机矩阵
rand([m,n]) % m行n列的随机矩阵

%使用help来找函数的用法
```

矩阵的运算
```
size(m) %获取矩阵的行和列
[row,column]=size(m)

%矩阵的转置
m'   
% 矩阵的逆
inv(m) %求逆矩阵
 % 特征值和特征向量
[V,D]=eig(m) %V是特征向量矩阵，D的对角线是特征值
%乘法和点乘
a*b %一般意义上的矩阵乘法
a.*b %相应元素的乘积
%矩阵的除法
a/b %相当于a和b的逆的乘积
a./b %对应元素相除
a\b %相当于inv(a)*b,求解Ax=b的解
%乘方运算
a^5 %
a.^5 %对应元素的五次方
%广播机制 一个矩阵和一个数相加减,会自动生成一个全为该数的矩阵
a=[1,2;3,4];
b=1;
% a+b=[2,3;4,5]
%逻辑运算
a>b %会将每个数进行比较,得到一个0-1矩阵
```


#矩阵的索引
```
m=[1,2,3;4,5,6;7,8,9]
m(8) %值为6，说明是按照列来检索。
m([1,3,5]) %类似上面，可以输入一个矩阵，得到的也是一个矩阵。
m(2,3) %第二行第三列的元素
m([1,2],3) %第一二行的第三列的元素,是一个列矩阵
m([1,2],[1,2]) %第一二行第一二列的元素.

m(1:2,1:3) %前两行

```
MATLAB基础语法
```
% 1.1.变量类型
%double类型
%字符串类型 单引号和双引号一样 字符串类型的矩阵
%字符串的加法就是简单拼接，但是不支持乘法、除法、减法运算
%字符串和数字的转化
strnum("5") %结果是数字类型的5
num2str(1/3,2)  %数字转字符串结果为'0.33'第二个参数为有效数字位数


```
输入和输出
```
value = input("请输入一个值：")%将输入的值保存在value中
string = input("请输入名字：",'s');%不支持字符串
%需要加一个参数's';

%输出语句
disp(value);
disp("frank");
disp(["hello","world"]);
disp("hello",2)%报错,应当改为disp(["hello",2])
%这样的话就将2视为字符串
disp(["1/3 =",1/3])%会将1/3转化为0.33333然后转化为字符串
%拼接字符串可以使用加法符号
```

运算符与if…else控制句
```
%关系运算符
% ">" "<"  "=="
%逻辑运算符
% &与 |或 ~非
%if…else控制语句
if(1<2)
disp("true");
end

%另一种变体,虽然这个程序不是很严谨,但是作为演示还是很不错啦.
if(value == 1)
disp("1既不是质数也不是合数")
elseif(isprime(value))
disp("输入是质数")
else
disp("输入是合数")
end
```
1. 生成$[min,max]$之间的随机(整数)矩阵，行列数为用户输入，小数或整数由用户指定，最后输出结果（要保证每次相同的输入，输出也相同）。
```
val=input("请输入矩阵元素范围[min,max]=")
sz=input("请输入矩阵行列数[row,col]=")
isInt=input("请指定元素类型 0)小数 1)整数")
rand('seed',0)
if isInt ==0
res=(val(2)-val(1))*rand(sz)+val(1);
else
res=randi([val(1),val(2)],[sz(1),sz(2)]);
end
disp(res)
```
2. Monte Carlo法计算$\pi$的值。
```
allPoints=input('请输入生成的总点数：')
count=0;
for i=1:allPoints
     if rand^2+rand^2<=1
           count=count+1
     end
end
res=count/allPoints*4
disp(res)

```
3. 计算Fibbonacci数列的第n项和前n项的和，n为用户输入值。
```
% 计算斐波那契数列的前n项
% 使用一个数列即可
res=[1,1]
N = input('请输入一个数字：')
for 3:N
      element = res(length(res))+res(length(res)-1);
      res = [res, element];
end
disp(res)
disp(sum(res))
```
4. 圆中随机四个点在同一个半圆的概率？
